[{"D:\\webApp\\react_chatapp\\chat_app\\src\\index.js":"1","D:\\webApp\\react_chatapp\\chat_app\\src\\App.js":"2","D:\\webApp\\react_chatapp\\chat_app\\src\\components\\Join\\Join.js":"3","D:\\webApp\\react_chatapp\\chat_app\\src\\components\\Chat\\Chat.js":"4","D:\\webApp\\react_chatapp\\chat_app\\src\\components\\Message\\Message.js":"5","D:\\webApp\\react_chatapp\\chat_app\\src\\components\\Navbar\\Navbar.js":"6"},{"size":253,"mtime":1685426583044,"results":"7","hashOfConfig":"8"},{"size":705,"mtime":1685646177946,"results":"9","hashOfConfig":"8"},{"size":868,"mtime":1685508970148,"results":"10","hashOfConfig":"8"},{"size":2791,"mtime":1685646206996,"results":"11","hashOfConfig":"8"},{"size":396,"mtime":1685630887916,"results":"12","hashOfConfig":"8"},{"size":1745,"mtime":1685642095661,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"kff531",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"D:\\webApp\\react_chatapp\\chat_app\\src\\index.js",[],[],[],"D:\\webApp\\react_chatapp\\chat_app\\src\\App.js",["36"],[],"import './App.css';\nimport socketIO from \"socket.io-client\";\nimport Join from './components/Join/Join';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Chat from './components/Chat/Chat';\n// const ENDPOINT='http://localhost:5000/';\n// const socket= socketIO(ENDPOINT,{transports:['websocket']});\nimport Navbar from './components/Navbar/Navbar';\nfunction App() {\n  // socket.on(\"connect\",()=>{\n\n  // });\n  return (\n    <div className=\"App\">\n      <Router>\n      <Navbar/>\n        <Routes>\n          <Route path='/' exact element={<Join/>} />\n          <Route path='/chat' exact element={<Chat/>} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\webApp\\react_chatapp\\chat_app\\src\\components\\Join\\Join.js",[],[],"D:\\webApp\\react_chatapp\\chat_app\\src\\components\\Chat\\Chat.js",["37","38"],[],"import React, { useEffect, useState } from 'react'\r\nimport { user } from \"../Join/Join\";\r\nimport socketIo from \"socket.io-client\";\r\nimport './chat.css';\r\nimport Message from '../Message/Message';\r\nimport sendLogo from '../../images/send.png';                                                                                                                                                                                                                                                                                                              \r\nimport ReactScrollToBottom from \"react-scroll-to-bottom\"\r\nimport closeIcon from \"../../images/closeIcon.png\";\r\nimport Navbar from '../Navbar/Navbar';\r\nconst ENDPOINT=\"http://localhost:5000/\"\r\nlet socket;\r\nconst Chat = () => {\r\n  const[id,setid]=useState(\"\");\r\n  const[messages,setMessages]=useState([])\r\n  const send=()=>{\r\n    const message=document.getElementById('chatInput').value;\r\n    socket.emit('message',{message,id});\r\n    document.getElementById('chatInput').value=\"\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    socket=socketIo ( ENDPOINT,{transports:['websocket']})\r\n    socket.on('connect',()=>{\r\n        alert(\"connected\");\r\n        setid(socket.id);\r\n    })\r\n    console.log(socket);\r\n    socket.emit('joined',{user})\r\n\r\n    socket.on('welcome',(data)=>{\r\n      setMessages([...messages,data]);\r\n      console.log(data.user,data.message);\r\n    });\r\n    socket.on('userJoined',(data)=>{\r\n      setMessages([...messages,data]);\r\n      console.log(data.user,data.message);\r\n    })\r\n    socket.on('leave',(data)=>{\r\n      setMessages([...messages,data]);\r\n      console.log(data.user,data.message)\r\n    })\r\n    return()=>{ \r\n      socket.emit('disconnected');\r\n      socket.off();\r\n    }\r\n  },[]);\r\n  useEffect(()=>{\r\n    socket.on('sendMessage',(data)=>{\r\n      setMessages([...messages,data]);\r\n      console.log(data.user,data.message,data.id);\r\n    })\r\n    return()=>{\r\n     socket.off()\r\n    }\r\n  },[messages])\r\n    return (\r\n\r\n            <div className='chatPage'>\r\n      <div className='chatContainer'>\r\n        <div className='header'>\r\n          <h2>C chat</h2>\r\n          <a href=\"./\"><img src={closeIcon} alt=\"close\"/></a>\r\n        </div>\r\n            <ReactScrollToBottom className='chatBox'>\r\n              {messages.map((item)=><Message user={item.id===id?'':item.user} message={item.message} classs={item.id===id?'right':'left'}/>)}\r\n            </ReactScrollToBottom>\r\n                <div className='inputBox'>\r\n                    <input onKeyPress={(event)=>event.key==='Enter' ? send():null} type=\"text\" id='chatInput'/>\r\n                    <button  onClick={send} className='sendBtn'><img src={sendLogo} alt=\"send'\"/></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","D:\\webApp\\react_chatapp\\chat_app\\src\\components\\Message\\Message.js",[],[],"D:\\webApp\\react_chatapp\\chat_app\\src\\components\\Navbar\\Navbar.js",["39"],[],"import \"./navbar.css\"\r\n\r\nimport React from 'react'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar bg-body-tertiary fixed-top\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\" aria-controls=\"offcanvasNavbar\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                        <div className=\"offcanvas-header\">\r\n                            <h5 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Theme</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className=\"offcanvas-body\">\r\n                            <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                <div class=\"form-check form-switch\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                                    <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Dark theme</label>\r\n                                </div>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n",{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":9,"column":8,"nodeType":"42","messageId":"43","endLine":9,"endColumn":14},{"ruleId":"45","severity":1,"message":"46","line":46,"column":5,"nodeType":"47","endLine":46,"endColumn":7,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":10,"column":21,"nodeType":"51","endLine":10,"endColumn":58},"no-unused-vars","'socketIO' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.","ArrayExpression",["52"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"53","fix":"54"},"Update the dependencies array to be: [messages]",{"range":"55","text":"56"},[1738,1740],"[messages]"]